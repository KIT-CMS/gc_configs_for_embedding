import argparse
import os
import stat

parser = argparse.ArgumentParser(
    description="This scipt can be used, to generate a script that spawns multiple grid control tasks automatically"
)

parser.add_argument("--taskname", required=True, help="Name of the Embedding task")
parser.add_argument("--tmux_path", help="path to the tmux executable", default="tmux")
parser.add_argument("--configlist", required=True, help="list of runs to be processed")
parser.add_argument("--gc_path", required=True, help="path to gc folder")


def create_tmux_while(taskname, tmux_path, configlist, gc_path):
    scriptname = "{name}/while_tmux.sh".format(name=taskname)
    if os.path.exists(scriptname):
        return scriptname
    out_file = open(scriptname, "w")
    out_file.write("#!/bin/bash\n")
    out_file.write("\n")
    out_file.write("# This script is automatically generated by create_tmux_while.py\n")
    # check if the session exists, just attach to it
    out_file.write(
        "{tmux_path} has-session -t {sessionname} 2>/dev/null\n".format(
            tmux_path=tmux_path, sessionname=taskname
        )
    )
    out_file.write("if [ $? != 0 ]; then\n")
    # first create the tmux session
    out_file.write(
        "   {tmux_path} new-session -d -x 300 -s {sessionname} 'python2 {gc_path}/go.py {configpath} -Gc' \n".format(
            tmux_path=tmux_path,
            sessionname=taskname,
            gc_path=gc_path,
            configpath=configlist[0],
        )
    )

    out_file.write("    {tmux_path} select-layout tiled \n".format(tmux_path=tmux_path))
    out_file.write(
        "   {tmux_path} rename-window '{title_0}'\n".format(
            title_0=taskname + "_0", tmux_path=tmux_path
        )
    )
    # out_file.write(
    #     "   {tmux_path} select-window -t {sessionname}:0 \n".format(
    #         sessionname=taskname, tmux_path=tmux_path
    #     )
    # )
    counter = 0
    splitable = True
    for config in configlist[1:]:
        if splitable:
            out_file.write(
                "   {tmux_path} split-window -h 'python2 {gc_path}/go.py {configpath} -Gc' \n".format(
                    tmux_path=tmux_path,
                    taskname=taskname,
                    gc_path=gc_path,
                    configpath=config,
                )
            )
            splitable = False
            counter += 1
        else:
            out_file.write(
                "   {tmux_path} new-window -n {title} 'python2 {gc_path}/go.py {configpath} -Gc' \n".format(
                    tmux_path=tmux_path,
                    title=taskname + "_" + str(counter),
                    gc_path=gc_path,
                    configpath=config,
                )
            )
            splitable = True
    out_file.write("fi\n")
    out_file.write(
        "{tmux_path} -2 attach-session -t {sessionname} \n".format(
            tmux_path=tmux_path, sessionname=taskname
        )
    )
    out_file.close()
    os.chmod(scriptname, stat.S_IRWXU)
    return scriptname


if __name__ == "__main__":
    args = parser.parse_args()
    create_tmux_while(args.taskname, args.tmux_path, args.configlist, args.gc_path)

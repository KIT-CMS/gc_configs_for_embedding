import argparse
import os
import stat

parser = argparse.ArgumentParser(
    description="This scipt can be used, to generate a script that spawns multiple grid control tasks automatically"
)

parser.add_argument("--taskname", required=True, help="Name of the Embedding task")
parser.add_argument("--tmux_path", help="path to the tmux executable", default="tmux")
parser.add_argument("--configlist", required=True, help="list of runs to be processed")
parser.add_argument("--gc_path", required=True, help="path to gc folder")

def create_simple_grid_control_script(taskname, configlist, gc_path):
    scriptname = f"./{taskname}/while.sh"
    if os.path.exists(scriptname):
        return scriptname
    gc_commands = [f"python2 {gc_path}/go.py {config} -G" for config in configlist]
    with open(scriptname, "w") as out_file:
        out_file.write(f"""#!/bin/bash\n
touch .lock\n
while [ -f ".lock" ]; do
    {'\n'.join(gc_commands)}
    echo "rm .lock"
    sleep 2
done
""")

    os.chmod(f"{taskname}/while.sh", stat.S_IRWXU)
    return scriptname

def create_tmux_grid_control_script(taskname, configlist, gc_path, tmux_binary="tmux"):
    scriptname = "{name}/while_tmux.sh".format(name=taskname)
    if os.path.exists(scriptname):
        return scriptname
    with open(scriptname, "w") as out_file:
        out_file.write(f"""#!/bin/bash\n
# This script is automatically generated by create_tmux_while.py\n
# check if the session exists, just attach to it
{tmux_binary} has-session -t {taskname} 2>/dev/null\n
if [ $? != 0 ]; then\n
    # first create the tmux session
    {tmux_binary} new-session -d -x 300 -s {taskname} 'python2 {gc_path}/go.py {configlist[0]} -Gc'
    {tmux_binary} select-layout tiled
    {tmux_binary} rename-window '{taskname + "_0"}'\n
""")

    for counter, config in enumerate(configlist[1:]):
        # split tmux window and create new window in turns 
        if counter % 2 == 0:
            out_file.write(f"   {tmux_binary} split-window -h 'python2 {gc_path}/go.py {config} -Gc' \n")
        else:
            out_file.write(f"   {tmux_binary} new-window -n {taskname + '_' + str(counter // 2 + 1)} 'python2 {gc_path}/go.py {config} -Gc' \n")
    out_file.write(f"fi\n{tmux_binary} -2 attach-session -t {taskname} \n")
    out_file.close()
    os.chmod(scriptname, stat.S_IRWXU)
    return scriptname


if __name__ == "__main__":
    args = parser.parse_args()
    create_tmux_grid_control_script(args.taskname, args.tmux_binary, args.configlist, args.gc_path)
